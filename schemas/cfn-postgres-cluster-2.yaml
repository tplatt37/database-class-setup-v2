AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  database-class-setup : Postgresql MultiAZ Cluster (with two readable standbys!).
  This uses 3 AZs total.
  
Parameters:

  Prefix:
    Description: "String used in resource names and exports to ensure uniqueness."
    Default: database
    Type: String

Resources:

  PostgresqlCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    Properties:
      # NOTE: Mutli-AZ Cluster does not support the Burstable types.
      DBClusterInstanceClass: db.m5d.large
      Engine: postgres
      #
      # TODO: Not sure you can set the CA settings for a MultiAZ Cluster via CFN yet (2023-09-02)
      #
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion
      # aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"
      EngineVersion: "15.3"
      # Must use provisioned IOPS: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html
      StorageType: io1
      # I think there's some sort of minimum here... and this is likely it.
      AllocatedStorage: 128 
      Iops: 1000
      DBSubnetGroupName: database-vpc-dbsubnetgroup-nqhn2dgbng6k
          
      VpcSecurityGroupIds: 
      - sg-06857679dc035032f

      # NOTE: username and password are coming from the secret created earlier in this stack.
      # To make it even more complicated, the Secret was created in another stack so we are going to ImportValue of the Secret Arn
      MasterUsername: dbadmin
      MasterUserPassword: testing12345

      # https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.Procedural.UploadtoCloudWatch.html
      EnableCloudwatchLogsExports:
        - postgresql
      StorageEncrypted: true
        
Outputs:

  #
  # Postgresql Cluster
  #
  
  PostgresqlCluster:
    Value: !Ref PostgresqlCluster
    Export:
      Name: !Join ["-", [ !Ref Prefix, "PostgresqlClusterName"]]
      
  PostgresqlClusterPort:
    Value: !GetAtt PostgresqlCluster.Endpoint.Port
    Export:
      Name: !Join ["-", [ !Ref Prefix, "PostgresqlClusterPort"]]
      
  PostgresqlClusterEndpoint:
    Value: !GetAtt PostgresqlCluster.Endpoint.Address
    Export:
      Name: !Join ["-", [ !Ref Prefix, "PostgresqlClusterEndpoint"]]

  PostgresqlClusterReadEndpoint:
    Value: !GetAtt PostgresqlCluster.ReadEndpoint.Address
    Export:
      Name: !Join ["-", [ !Ref Prefix, "PostgresqlClusterReadEndpoint"]]
